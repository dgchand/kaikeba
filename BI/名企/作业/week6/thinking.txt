-----------------------------
Thinking1	
什么是近似最近邻查找，常用的方法有哪些			
"能简要说明近似最近邻查找（5point）
常用的方法（5point）"

近似最近邻查找缩写ANN，是由于最近邻查找问题在存储代价以及计算代价太大的情况采用的近似算法。其在牺牲可接受范围
内的精度的情况下提高搜索效率。用于处理大规模数据的相似计算。

常用的方法有MinHash以及SimHash。MinHash降维后使用LSH，能在海量数据中找到一个高维度相似的点集合。SimHash
算法搞笑适用于长文本。




-----------------------------
Thinking2	
为什么两个集合的minhash值相同的概率等于这两个集合的Jaccard相似度			
"能简要说明MinHash值相同的概率与Jaccard相似度相等的证明（10point）

"

对于文档Ci和Cj，分词矩阵对应的行有三种可能：A为两列值都为1，B为分别是0、1，C是两列都是0。C类对于结果没有影响，
可以删除。则考虑两文档的MinHash值时
P(h(Ci)=h(Cj)) = P(删除C类后第一行为A）= A类行的个数 / 所有行的个数 = a / (a+b)
同时 Jaccard(Ci,Cj) = a/(a+b)
所以MinHash值相同的概率与Jaccard相似度相等。




-----------------------------
Thinking3	
SimHash在计算文档相似度的作用是怎样的？			
"1、文档SimHash的计算过程（5points）
2、如何通过文档的SimHash计算文档之间的相似度（5points）"

SimHash算法搞笑，适用于长文本的相似度计算，如google将SimHash与用到新闻网页的去重。

文档SimHash首先要根据存储的成本以及数据集的大小设置SimHash的位数，初始化后，采用如2-shingles的方式提取
文本中的特征。在使用传统的hash函数计算各个hashcode，根据出现的频率赋予权重。最后根据该位是否大于0计算最后
得到的设定位数的SimHash。

通过计算两个文档的fingerprint之间的hamming距离来判断文档之间的相似度（3以内则两文档基本相同）。
执行中由于会存在计算量太大的问题，会利用抽屉原理，将原本需要比较的大量次数降低到少量的与候选结果的对比。




-----------------------------
Thinking4	
为什么YouTube采用期望观看时间作为评估指标			
能简要说明原因（10points）

在YouTube推荐系统的排序阶段建模，CTR指标对于视频搜索具有一定的欺骗性，所以其采用了期望观看时间作为评估指标。
而观看时长不是只有0/1两种标签，其后采用了weighted logistic regression来模拟此输出。












